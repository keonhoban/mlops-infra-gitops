{{- range $ing := .Values.ingresses }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Release.Name }}-{{ $ing.name }}
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ $ing.whitelist }}"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
{{- if and $ing.tls $ing.tls.enabled $ing.tls.issuerName }}
    cert-manager.io/cluster-issuer: "{{ $ing.tls.issuerName }}"
{{- end }}
{{- if $ing.excludeMetrics }}
    nginx.ingress.kubernetes.io/use-regex: "true"    # ✅ 정규식 경로 사용
{{- end }}
spec:
  ingressClassName: {{ $ing.className | default "nginx" }}   # ✅ $.className → $ing.className
  rules:
    - host: {{ $ing.host }}
      http:
        paths:
{{- range $p := $ing.paths }}
          - path: {{ if and $ing.excludeMetrics (eq $p.path "/") }}^/(?!metrics$).*{{ else }}{{ $p.path }}{{ end }}
            pathType: {{ if and $ing.excludeMetrics (eq $p.path "/") }}ImplementationSpecific{{ else }}{{ $p.pathType }}{{ end }}
            backend:
              service:
                name: {{ $.Values.service.name }}
                port:
                  number: {{ $.Values.service.port }}
{{- end }}
{{- if $ing.tls }}
  tls:
    - hosts:
        - {{ $ing.host }}
      secretName: {{ $ing.tls.secretName }}
{{- end }}
{{- end }}
